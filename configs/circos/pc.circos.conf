<<include my_etc/colors_fonts_patterns.conf>>

<<include my_etc/ideogram.conf>>
<<include my_etc/ticks.conf>>

<image>
<<include etc/image.conf>>
</image>

karyotype   = ./data/cell_types/ccr5.cell_type.txt

chromosomes_units = 100000000
chromosomes_display_default = yes
#chromosomes       = ct01;ct02
#chromosomes_reverse = ct02

################################################################
# 
# define 2 scatter plots, using the same data file
#

<plots>

# all are scatter plots

type             = scatter

stroke_thickness = 1

# first plot shows all points and selectively formats points at small/large
# y-axis values to be red/green and triangles/rectangles

<plot>

file             = ./data/hiv.ccr5_exp.pc.5e-5.tsv
fill_color       = grey
stroke_color     = black
glyph            = circle
glyph_size       = 10

max   = -3 
min   = -20
r1    = 0.75r
r0    = 0.55r

# optional y0/y1 values (absolute or relative) in <background> blocks
# define the start/end limits of background color
#
# y0 = 0.006
# y0 = 0.75r

<backgrounds>
<background>
color     = vlgreen
</background>
</backgrounds>

<axes>
<axis>
color     = red
position  = eval(log10(5e-8))
#spacing   = 0.25r
thickness = 1
</axis>

</axes>

<rules>

<rule>
#condition    = 1
condition    = var(value) >= 5e-8
value        = eval(log10(var(value)))
stroke_color = green
fill_color   = green
glyph        = circle
glyph_size   = 8
</rule>

<rule>
condition    = var(value) < 5e-8
value        = eval(log10(var(value)))
stroke_color = red
fill_color   = red
show         = yes
</rule>

</rules>

</plot>

# the second plot is a crop of the first plot, placed outside
# the ideogram circle, showing only points with large y-values

<plot>

file             = ./data/bcg.ccr5_exp.pc.5e-5.tsv
fill_color       = green
stroke_color     = dgreen
glyph            = rectangle
glyph_size       = 8

max   = 20
min   = 3 
r1    = .95r
r0    = .75r

<backgrounds>
# you can stack backgrounds by using transparent color
<background>
color     = vvlgreen
</background>
</backgrounds>

<axes>
<axis>
color     = red
position  = eval(-log10(5e-8))
thickness = 1
</axis>
</axes>

<rules>

<rule>
#condition    = 1
condition    = var(value) >= 5e-8
value        = eval(-log10(var(value)))
stroke_color = green
fill_color   = green
glyph        = circle
glyph_size   = 8
</rule>

<rule>
condition    = var(value) < 5e-8
value        = eval(-log10(var(value)))
stroke_color = red
fill_color   = red
show         = yes
</rule>

</rules>

</plot>

</plots>

<<include etc/housekeeping.conf>>
